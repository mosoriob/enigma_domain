#!/bin/bash

set -e
checkExitCode() {
if [ $? -ne 0 ]; then
    echo "Error"
    exit 1;
fi
}

BASEDIR=`dirname $0`

. $BASEDIR/io.sh 1 4 1 "$@"

#make temporary directory
TEMP=$(mktemp -d)

# Copy scripts to temp directory
cp $BASEDIR/app.R $TEMP/app.R
cp $BASEDIR/publish.R $TEMP/publish.R
cp $INPUTS1 $TEMP/data.csv    ## You need to copy the input data to the temp directory

# Show dirs
echo "Base Dir: $BASEDIR"
ls -a $BASEDIR
echo "Input1: $INPUTS1"
echo "Output1: $OUTPUTS1"
echo "Area: $PARAMS1"
echo "Demographic: $PARAMS2"
echo "SNP: $PARAMS3"
echo "Trait: $PARAMS4"
echo "$PARAMS1" > $TEMP/input_var.txt
ls $TEMP

# Name of the application to be published. Must start with /
# Use a variable if you want different visualizations per execution.
APPNAME="/forestplot_$(date +%s)"

#Creating the image:
#I've changed this name as is a image that includes more packages (see Dockerfile)
docker build shiny-extras $BASEDIR
#Should be commented after creating the shiny-extras image.

# Parameters
effect='EFFECT'
demographic="${PARAMS2// \(E\)}" 
demographic="${demographic// }"
NonEuro=(GOBS,IMH,UNICAMP,Meth-CT,MIRECC,Meth-CT,MIRECC,UKBB_NonEuropean,OSAKA,PING_NonEuropean,UKBB)
cohort_size='N'
sample_size='SAMPLE_SIZE'
CI_LBB='CI_LB'
CI_UBB='CI_UB'
cols=($effect,$sample_size,$demographic,$CI_LBB,$CI_UBB,N,TOTAL_N,PCT)
Area=$PARAMS1
SNP=$PARAMS3

min_val=0
max_val=1
demographic_annot=(Female,Percentage)
if [ "$demographic" = "HasAgeMean" ]; then
	demographic_annot=(Mean,Age)
fi

Trait=(Surface,Area)

#Running the container. Coping tmp to appname and publishing everithing on $TEMP
docker run -v $TEMP:$APPNAME --rm shiny-extras /bin/sh -c "cd $APPNAME; Rscript publish.R ${effect} ${demographic} ${NonEuro} ${cohort_size} ${cols} ${sample_size} ${CI_LBB} ${CI_UBB} ${Area} ${Trait} ${SNP} ${min_val} ${max_val} ${demographic_annot} > publish.log"  

#creating shiny config
echo "{\"url\": \"$(tail -1 $TEMP/publish.log | sed 's/^.* //g')\"}" > $OUTPUTS1

echo "Output 1: $OUTPUTS1"

checkExitCode
