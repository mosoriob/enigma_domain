#!/bin/bash

set -e
checkExitCode() {
if [ $? -ne 0 ]; then
    echo "Error"
    exit 1;
fi
}

BASEDIR=`dirname $0`

. $BASEDIR/io.sh 1 0 1 "$@"

#make temporary directory
TEMP=$(mktemp -d)

# Copy scripts to temp directory
cp $BASEDIR/app.R $TEMP/app.R
cp $BASEDIR/publish.R $TEMP/publish.R
cp $INPUTS1 $TEMP/data.csv    ## You need to copy the input data to the temp directory

# Show dirs
echo "Base Dir: $BASEDIR"
ls -a $BASEDIR
echo "Input1: $INPUTS1"
echo "Output1: $OUTPUTS1"
ls $TEMP

# Name of the application to be published. Must start with /
# Use a variable if you want different visualizations per execution.
APPNAME="/forestplot_$(date +%s)"

#Creating the image:
#I've changed this name as is a image that includes more packages (see Dockerfile)
docker build shiny-extras $BASEDIR
#Should be commented after creating the shiny-extras image.

#Running the container. Coping tmp to appname and publishing everithing on $TEMP
docker run -v $TEMP:$APPNAME --rm shiny-extras /bin/sh -c "cd $APPNAME; Rscript publish.R > publish.log"
# docker run -v $TEMP:$APPNAME --rm shiny-extras /bin/sh -c "cd $APPNAME; Rscript publish.R > publish.log"

#creating shiny config
echo "{\"url\": \"$(tail -1 $TEMP/publish.log | sed 's/^.* //g')\"}" > $OUTPUTS1

echo "Output 1: $OUTPUTS1"

checkExitCode
